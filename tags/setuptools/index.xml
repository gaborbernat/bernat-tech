<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>setuptools on Tech articles by Bern치t G치bor</title><link>https://gaborbernat.github.io/bernat-tech/tags/setuptools/</link><description>Recent content in setuptools on Tech articles by Bern치t G치bor</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 07 Feb 2019 13:41:03 +0000</lastBuildDate><atom:link href="https://gaborbernat.github.io/bernat-tech/tags/setuptools/index.xml" rel="self" type="application/rss+xml"/><item><title>Python packaging - Growing Pains</title><link>https://gaborbernat.github.io/bernat-tech/posts/growing-pain/</link><pubDate>Thu, 07 Feb 2019 13:41:03 +0000</pubDate><guid>https://gaborbernat.github.io/bernat-tech/posts/growing-pain/</guid><description>In my previous two posts I&amp;rsquo;ve went over what package types python has, and how package building works, especially with the introduction of the PEP-517/518. Although the changes were primarily to make things more robust, while implementing it and releasing we did run in a few issues. This post is going to go over a few, hopefully serving as lessons learned for all of us and presenting some interesting problems to solve in the future.</description></item><item><title>Python packaging - Past, Present, Future</title><link>https://gaborbernat.github.io/bernat-tech/posts/pep-517-518/</link><pubDate>Thu, 07 Feb 2019 13:40:59 +0000</pubDate><guid>https://gaborbernat.github.io/bernat-tech/posts/pep-517-518/</guid><description>Have you ever wondered what happens exactly when you run pip install? This post will give you a detailed overview of the steps involved in the past, and how it all changes with the adoption of PEP-517 and PEP-518.
In my previous post I&amp;rsquo;ve described how it&amp;rsquo;s possible to install three types of content: source tree, source distribution, and wheels. Only the last two types are uploaded to PyPI, the central Python repository.</description></item><item><title>The state of Python Packaging</title><link>https://gaborbernat.github.io/bernat-tech/posts/pep-517-and-python-packaging/</link><pubDate>Thu, 07 Feb 2019 13:40:54 +0000</pubDate><guid>https://gaborbernat.github.io/bernat-tech/posts/pep-517-and-python-packaging/</guid><description>pip 19.0 has been released on 22nd January 2019. On the feature list, most notably, it now supports PEP-517, which by default is turned on when that the project has a pyproject.toml at the root folder. The PEP in question has been created in 2015 and accepted in 2017. Even though it took a while until pip implemented it, the release and the issues that followed confirmed that many people are not familiar with it.</description></item></channel></rss>